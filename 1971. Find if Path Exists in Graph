class Solution {
public:
  bool visited[200000];
vector<vector<int>> graph;
bool dfs(int start, int end) {
	if (start == end) return true;
	if (visited[start]) return false;
	visited[start] = true;
	for (auto adjacencynode : graph[start])
		if (dfs(adjacencynode, end)) return true;
		
	return false;
}
bool validPath(int n, vector<vector<int>>& edges, int start, int end) {
	graph.resize(n);

	for (auto& edge : edges)
	{
		graph[edge[0]].push_back(edge[1]);
		graph[edge[1]].push_back(edge[0]);
	}
	return  dfs(start, end);
}

};